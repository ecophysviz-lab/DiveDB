# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  pull_request

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      DJANGO_SECRET_KEY: "mock-secret-key"
      POSTGRES_DB: "divedb"
      POSTGRES_USER: "divedbuser"
      POSTGRES_PASSWORD: "divedbpassword"
      POSTGRES_PORT: 5432
      OPENSTACK_AUTH_URL: http://mock-openstack-url
      OPENSTACK_APPLICATION_CREDENTIAL_ID: mock-credential-id
      OPENSTACK_APPLICATION_CREDENTIAL_SECRET: mock-credential-secret

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: divedb
          POSTGRES_USER: divedbuser
          POSTGRES_PASSWORD: divedbpassword
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v3
      with:
        python-version: "3.12"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        python manage.py migrate
        # python run_tests.py
