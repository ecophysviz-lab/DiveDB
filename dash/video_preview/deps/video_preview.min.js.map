{"version":3,"file":"video_preview.min.js","mappings":"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","sources":["webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///external window \"React\"","webpack:///external window \"PropTypes\"","webpack:///./src/lib/components/VideoPreview.react.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","var getCurrentScript = function() {\n    var script = document.currentScript;\n    if (!script) {\n        /* Shim for IE11 and below */\n        /* Do not take into account async scripts and inline scripts */\n\n        var doc_scripts = document.getElementsByTagName('script');\n        var scripts = [];\n\n        for (var i = 0; i < doc_scripts.length; i++) {\n            scripts.push(doc_scripts[i]);\n        }\n\n        scripts = scripts.filter(function(s) { return !s.async && !s.text && !s.textContent; });\n        script = scripts.slice(-1)[0];\n    }\n\n    return script;\n};\n\nvar isLocalScript = function(script) {\n    return /\\/_dash-component-suites\\//.test(script.src);\n};\n\nObject.defineProperty(__webpack_require__, 'p', {\n    get: (function () {\n        var script = getCurrentScript();\n\n        var url = script.src.split('/').slice(0, -1).join('/') + '/';\n\n        return function() {\n            return url;\n        };\n    })()\n});\n\nif (typeof jsonpScriptSrc !== 'undefined') {\n    var __jsonpScriptSrc__ = jsonpScriptSrc;\n    jsonpScriptSrc = function(chunkId) {\n        var script = getCurrentScript();\n        var isLocal = isLocalScript(script);\n\n        var src = __jsonpScriptSrc__(chunkId);\n\n        if(!isLocal) {\n            return src;\n        }\n\n        var srcFragments = src.split('/');\n        var fileFragments = srcFragments.slice(-1)[0].split('.');\n\n        fileFragments.splice(1, 0, \"v0_0_1m1759501112\");\n        srcFragments.splice(-1, 1, fileFragments.join('.'))\n\n        return srcFragments.join('/');\n    };\n}\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"React\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"PropTypes\"];","import React, { useRef, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst VideoPreview = ({\n  id,\n  videoSrc,\n  videoMetadata,\n  datasetStartTime,\n  setProps,\n  style,\n  playheadTime,\n  isPlaying, // Prop for controlling playback\n}) => {\n  const videoRef = useRef(null);\n  const [duration, setDuration] = useState(0);\n  const [isVideoActive, setIsVideoActive] = useState(false); // Track if video should be active for current playhead\n  const lastPlayheadTime = useRef(null);\n  const lastPlayingState = useRef(false);\n  const videoStartTime = useRef(null); // Cache video start timestamp\n\n  // Reset video state when videoSrc changes\n  useEffect(() => {\n    if (videoSrc) {\n      setDuration(0);\n      setIsVideoActive(false);\n      lastPlayheadTime.current = null;\n      lastPlayingState.current = false;\n      videoStartTime.current = null;\n      \n      if (videoRef.current) {\n        videoRef.current.currentTime = 0;\n      }\n    }\n  }, [videoSrc]);\n\n  // Helper function to parse video duration from HH:MM:SS.mmm format\n  const parseVideoDuration = (durationStr) => {\n    if (!durationStr) return 0;\n    try {\n      const timeParts = durationStr.split(\":\");\n      if (timeParts.length === 3) {\n        const hours = parseInt(timeParts[0]);\n        const minutes = parseInt(timeParts[1]);\n        const seconds = parseFloat(timeParts[2]);\n        return hours * 3600 + minutes * 60 + seconds;\n      }\n    } catch (e) {\n      console.error(\"Error parsing video duration:\", e);\n    }\n    return 0;\n  };\n\n  // Helper function to calculate video position and active state\n  const calculateVideoPosition = () => {\n    if (!videoMetadata || !playheadTime) return null;\n\n    // Cache video start time for performance\n    if (videoStartTime.current === null) {\n      videoStartTime.current = new Date(videoMetadata.fileCreatedAt.replace(\"Z\", \"+00:00\")).getTime() / 1000;\n    }\n\n    const videoDurationSeconds = parseVideoDuration(videoMetadata.duration);\n    const videoEndTime = videoStartTime.current + videoDurationSeconds;\n\n    // Check if playhead is within video's temporal range\n    const isActive = playheadTime >= videoStartTime.current && playheadTime <= videoEndTime;\n    const videoPosition = isActive ? playheadTime - videoStartTime.current : 0;\n\n    return {\n      isActive,\n      videoPosition: Math.max(0, Math.min(videoDurationSeconds, videoPosition)),\n      videoDurationSeconds\n    };\n  };\n\n  // Handle play/pause state changes and manual seeking\n  useEffect(() => {\n    if (!videoRef.current || !playheadTime || !videoMetadata) return;\n\n    const positionData = calculateVideoPosition();\n    if (!positionData) return;\n\n    const { isActive, videoPosition } = positionData;\n    \n    // Update active state\n    setIsVideoActive(isActive);\n\n    // Detect state changes\n    const playStateChanged = lastPlayingState.current !== isPlaying;\n    const isFirstUpdate = lastPlayheadTime.current === null; // First time this video gets playhead data\n    \n    // Detect manual scrubbing vs automatic progression\n    let significantTimeJump = false;\n    if (lastPlayheadTime.current !== null) {\n      const timeDiff = playheadTime - lastPlayheadTime.current;\n      \n      // If we're playing, expect ~1 second progression (with tolerance)\n      // If paused or time jump is large, it's manual scrubbing\n      if (!isPlaying || Math.abs(timeDiff) > 3 || Math.abs(timeDiff) < 0.5) {\n        significantTimeJump = Math.abs(timeDiff) > 0.1; // Any meaningful change when paused/jumped\n      }\n    }\n\n    if (isActive) {\n      // Handle seeking (time jumps, state changes, or first update that need position update)\n      if (playStateChanged || significantTimeJump || isFirstUpdate) {\n        console.log(`🎯 ${videoMetadata.filename}: Seeking to ${videoPosition.toFixed(2)}s`);\n        videoRef.current.currentTime = videoPosition;\n      }\n\n      // Handle playback state changes\n      if (playStateChanged || isFirstUpdate) {\n        if (isPlaying) {\n          console.log(`▶️ ${videoMetadata.filename}: Starting playback`);\n          videoRef.current.play().catch(e => console.warn(\"Video play failed:\", e));\n        } else {\n          console.log(`⏸️ ${videoMetadata.filename}: Pausing video`);\n          videoRef.current.pause();\n        }\n      }\n    } else {\n      // Video is outside temporal range\n      if (!videoRef.current.paused) {\n        console.log(`❌ ${videoMetadata.filename}: Video inactive - pausing`);\n        videoRef.current.pause();\n      }\n    }\n\n    // Update refs\n    lastPlayheadTime.current = playheadTime;\n    lastPlayingState.current = isPlaying;\n  }, [isPlaying, playheadTime, videoMetadata]);\n\n  const handleLoadedMetadata = () => {\n    const videoDuration = videoRef.current.duration;\n    setDuration(videoDuration);\n  };\n\n  const handleVideoError = (e) => {\n    console.error(\"VideoPreview: Video loading error:\", e);\n    console.error(\"VideoPreview: Failed video source:\", videoSrc);\n  };\n\n\n  return (\n    <div id={id} style={{ ...style }}>\n      {videoSrc && videoSrc.trim() ? (\n        <div style={{ position: 'relative' }}>\n          <video\n            ref={videoRef}\n            src={videoSrc}\n            onLoadedMetadata={handleLoadedMetadata}\n            onError={handleVideoError}\n            width=\"100%\"\n            controls\n            style={{\n              borderRadius: \"8px\",\n              backgroundColor: \"#000000\",\n              opacity: isVideoActive ? 1 : 0.5, // Dim video when not temporally active\n            }}\n          />\n          {!isVideoActive && videoMetadata && (\n            <div\n              style={{\n                position: \"absolute\",\n                top: \"50%\",\n                left: \"50%\",\n                transform: \"translate(-50%, -50%)\",\n                backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n                color: \"white\",\n                padding: \"12px 20px\",\n                borderRadius: \"8px\",\n                textAlign: \"center\",\n                fontSize: \"14px\",\n                maxWidth: \"90%\",\n                boxSizing: \"border-box\",\n              }}\n            >\n              <div style={{ fontWeight: \"bold\", marginBottom: \"4px\" }}>\n                Video not active\n              </div>\n              <div style={{ fontSize: \"12px\", opacity: 0.9 }}>\n                Timeline is outside video time range\n              </div>\n            </div>\n          )}\n        </div>\n      ) : (\n        <div\n          style={{\n            padding: \"40px\",\n            textAlign: \"center\",\n            backgroundColor: \"#f8fafc\",\n            border: \"2px dashed #cbd5e1\",\n            borderRadius: \"12px\",\n            margin: \"20px\",\n          }}\n        >\n          <h3 style={{ margin: \"0 0 8px 0\", color: \"#475569\" }}>\n            No video selected\n          </h3>\n          <p style={{ margin: 0, fontSize: \"14px\", color: \"#475569\" }}>\n            Click a video indicator on the timeline to play\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nVideoPreview.propTypes = {\n  id: PropTypes.string,\n  videoSrc: PropTypes.string,\n  videoMetadata: PropTypes.object,\n  datasetStartTime: PropTypes.number,\n  setProps: PropTypes.func,\n  style: PropTypes.object,\n  playheadTime: PropTypes.number,\n  isPlaying: PropTypes.bool,\n};\n\nVideoPreview.defaultProps = {\n  style: {},\n  isPlaying: false,\n};\n\nexport default VideoPreview;\n"],"names":["url","__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","getCurrentScript","script","document","currentScript","doc_scripts","getElementsByTagName","scripts","i","length","push","filter","s","async","text","textContent","slice","src","split","join","jsonpScriptSrc","__jsonpScriptSrc__","chunkId","isLocal","test","srcFragments","fileFragments","splice","window","VideoPreview","_ref","id","videoSrc","videoMetadata","style","datasetStartTime","setProps","playheadTime","isPlaying","videoRef","useRef","_useState2","_slicedToArray","useState","setDuration","_useState4","isVideoActive","setIsVideoActive","lastPlayheadTime","lastPlayingState","videoStartTime","useEffect","current","currentTime","positionData","Date","fileCreatedAt","replace","getTime","videoDurationSeconds","durationStr","timeParts","parseInt","parseFloat","e","console","error","parseVideoDuration","duration","videoEndTime","isActive","videoPosition","Math","max","min","calculateVideoPosition","playStateChanged","isFirstUpdate","significantTimeJump","timeDiff","abs","log","concat","filename","toFixed","play","warn","pause","paused","React","_objectSpread","trim","position","ref","onLoadedMetadata","videoDuration","onError","width","controls","borderRadius","backgroundColor","opacity","top","left","transform","color","padding","textAlign","fontSize","maxWidth","boxSizing","fontWeight","marginBottom","border","margin","propTypes","PropTypes","defaultProps"],"sourceRoot":""}