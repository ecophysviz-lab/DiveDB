{"version":3,"file":"video_preview.min.js","mappings":"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","sources":["webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///external window \"React\"","webpack:///external window \"PropTypes\"","webpack:///./src/lib/components/VideoPreview.react.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","var getCurrentScript = function() {\n    var script = document.currentScript;\n    if (!script) {\n        /* Shim for IE11 and below */\n        /* Do not take into account async scripts and inline scripts */\n\n        var doc_scripts = document.getElementsByTagName('script');\n        var scripts = [];\n\n        for (var i = 0; i < doc_scripts.length; i++) {\n            scripts.push(doc_scripts[i]);\n        }\n\n        scripts = scripts.filter(function(s) { return !s.async && !s.text && !s.textContent; });\n        script = scripts.slice(-1)[0];\n    }\n\n    return script;\n};\n\nvar isLocalScript = function(script) {\n    return /\\/_dash-component-suites\\//.test(script.src);\n};\n\nObject.defineProperty(__webpack_require__, 'p', {\n    get: (function () {\n        var script = getCurrentScript();\n\n        var url = script.src.split('/').slice(0, -1).join('/') + '/';\n\n        return function() {\n            return url;\n        };\n    })()\n});\n\nif (typeof jsonpScriptSrc !== 'undefined') {\n    var __jsonpScriptSrc__ = jsonpScriptSrc;\n    jsonpScriptSrc = function(chunkId) {\n        var script = getCurrentScript();\n        var isLocal = isLocalScript(script);\n\n        var src = __jsonpScriptSrc__(chunkId);\n\n        if(!isLocal) {\n            return src;\n        }\n\n        var srcFragments = src.split('/');\n        var fileFragments = srcFragments.slice(-1)[0].split('.');\n\n        fileFragments.splice(1, 0, \"v0_0_1m1760022602\");\n        srcFragments.splice(-1, 1, fileFragments.join('.'))\n\n        return srcFragments.join('/');\n    };\n}\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"React\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"PropTypes\"];","import React, { useRef, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst VideoPreview = ({\n  id,\n  videoSrc,\n  videoMetadata,\n  datasetStartTime,\n  setProps,\n  style,\n  playheadTime,\n  isPlaying, // Prop for controlling playback\n  showControls = true, // Prop for controlling video controls visibility\n  timeOffset = 0, // Prop for timeline offset in seconds\n}) => {\n  const videoRef = useRef(null);\n  const [duration, setDuration] = useState(0);\n  const [isVideoActive, setIsVideoActive] = useState(false); // Track if video should be active for current playhead\n  const [controlsVisible, setControlsVisible] = useState(showControls); // Internal state for controls visibility\n  const [localOffset, setLocalOffset] = useState(timeOffset); // Local offset state\n  const [offsetPanelOpen, setOffsetPanelOpen] = useState(false); // Collapsible panel state\n  const [fineControlsOpen, setFineControlsOpen] = useState(false); // Fine adjustment controls state\n  const lastPlayheadTime = useRef(null);\n  const lastPlayingState = useRef(false);\n  const videoStartTime = useRef(null); // Cache video start timestamp\n\n  // Reset video state when videoSrc changes\n  useEffect(() => {\n    if (videoSrc) {\n      setDuration(0);\n      setIsVideoActive(false);\n      setControlsVisible(showControls); // Reset controls state for new video\n      setLocalOffset(0); // Reset offset to 0 for new video\n      setOffsetPanelOpen(false); // Close offset panel for new video\n      setFineControlsOpen(false); // Close fine controls for new video\n      lastPlayheadTime.current = null;\n      lastPlayingState.current = false;\n      videoStartTime.current = null;\n      \n      if (videoRef.current) {\n        videoRef.current.currentTime = 0;\n      }\n    }\n  }, [videoSrc, showControls]);\n\n  // Helper function to parse video duration from HH:MM:SS.mmm format\n  const parseVideoDuration = (durationStr) => {\n    if (!durationStr) return 0;\n    try {\n      const timeParts = durationStr.split(\":\");\n      if (timeParts.length === 3) {\n        const hours = parseInt(timeParts[0]);\n        const minutes = parseInt(timeParts[1]);\n        const seconds = parseFloat(timeParts[2]);\n        return hours * 3600 + minutes * 60 + seconds;\n      }\n    } catch (e) {\n      console.error(\"Error parsing video duration:\", e);\n    }\n    return 0;\n  };\n\n  // Helper function to format offset in a readable way\n  const formatOffset = (offsetSeconds) => {\n    const absOffset = Math.abs(offsetSeconds);\n    const sign = offsetSeconds >= 0 ? \"+\" : \"-\";\n    \n    if (absOffset < 60) {\n      return `${sign}${absOffset.toFixed(1)}s`;\n    } else if (absOffset < 3600) {\n      const minutes = Math.floor(absOffset / 60);\n      const seconds = (absOffset % 60).toFixed(1);\n      return `${sign}${minutes}m ${seconds}s`;\n    } else {\n      const hours = Math.floor(absOffset / 3600);\n      const minutes = Math.floor((absOffset % 3600) / 60);\n      const seconds = (absOffset % 60).toFixed(1);\n      return `${sign}${hours}h ${minutes}m ${seconds}s`;\n    }\n  };\n\n  // Helper function to format time in UTC 24-hour format (matching playhead format)\n  const formatUTCTime = (dateString) => {\n    try {\n      const dateObject = new Date(dateString);\n      const hours = dateObject.getUTCHours();\n      const minutes = dateObject.getUTCMinutes();\n      const seconds = dateObject.getUTCSeconds();\n      return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n    } catch (e) {\n      console.error(\"Error formatting UTC time:\", e);\n      return \"Invalid time\";\n    }\n  };\n\n  // Helper function to update offset and notify parent\n  const updateOffset = (newOffset) => {\n    setLocalOffset(newOffset);\n    if (setProps) {\n      setProps({ timeOffset: newOffset });\n    }\n  };\n\n  // Helper function to calculate video position and active state\n  const calculateVideoPosition = () => {\n    if (!videoMetadata || !playheadTime) return null;\n\n    // Cache original video start time for performance\n    if (videoStartTime.current === null) {\n      videoStartTime.current = new Date(videoMetadata.fileCreatedAt.replace(\"Z\", \"+00:00\")).getTime() / 1000;\n    }\n\n    // Apply time offset to video start time (positive offset = video appears later)\n    const adjustedVideoStartTime = videoStartTime.current + localOffset;\n    const videoDurationSeconds = parseVideoDuration(videoMetadata.duration);\n    const adjustedVideoEndTime = adjustedVideoStartTime + videoDurationSeconds;\n\n    // Check if playhead is within adjusted video's temporal range\n    const isActive = playheadTime >= adjustedVideoStartTime && playheadTime <= adjustedVideoEndTime;\n    const videoPosition = isActive ? playheadTime - adjustedVideoStartTime : 0;\n\n    return {\n      isActive,\n      videoPosition: Math.max(0, Math.min(videoDurationSeconds, videoPosition)),\n      videoDurationSeconds,\n      originalVideoStartTime: videoStartTime.current,\n      adjustedVideoStartTime,\n      adjustedVideoEndTime\n    };\n  };\n\n  // Handle play/pause state changes and manual seeking\n  useEffect(() => {\n    if (!videoRef.current || !playheadTime || !videoMetadata) return;\n\n    const positionData = calculateVideoPosition();\n    if (!positionData) return;\n\n    const { isActive, videoPosition } = positionData;\n    \n    // Update active state\n    setIsVideoActive(isActive);\n\n    // Detect state changes\n    const playStateChanged = lastPlayingState.current !== isPlaying;\n    const isFirstUpdate = lastPlayheadTime.current === null; // First time this video gets playhead data\n    \n    // Detect manual scrubbing vs automatic progression\n    let significantTimeJump = false;\n    if (lastPlayheadTime.current !== null) {\n      const timeDiff = playheadTime - lastPlayheadTime.current;\n      \n      // If we're playing, expect ~1 second progression (with tolerance)\n      // If paused or time jump is large, it's manual scrubbing\n      if (!isPlaying || Math.abs(timeDiff) > 3 || Math.abs(timeDiff) < 0.5) {\n        significantTimeJump = Math.abs(timeDiff) > 0.1; // Any meaningful change when paused/jumped\n      }\n    }\n\n    if (isActive) {\n      // Handle seeking (time jumps, state changes, or first update that need position update)\n      if (playStateChanged || significantTimeJump || isFirstUpdate) {\n        console.log(`🎯 ${videoMetadata.filename}: Seeking to ${videoPosition.toFixed(2)}s`);\n        videoRef.current.currentTime = videoPosition;\n      }\n\n      // Handle playback state changes\n      if (playStateChanged || isFirstUpdate) {\n        if (isPlaying) {\n          console.log(`▶️ ${videoMetadata.filename}: Starting playback`);\n          videoRef.current.play().catch(e => console.warn(\"Video play failed:\", e));\n        } else {\n          console.log(`⏸️ ${videoMetadata.filename}: Pausing video`);\n          videoRef.current.pause();\n        }\n      }\n    } else {\n      // Video is outside temporal range\n      if (!videoRef.current.paused) {\n        console.log(`❌ ${videoMetadata.filename}: Video inactive - pausing`);\n        videoRef.current.pause();\n      }\n    }\n\n    // Update refs\n    lastPlayheadTime.current = playheadTime;\n    lastPlayingState.current = isPlaying;\n  }, [isPlaying, playheadTime, videoMetadata]);\n\n  const handleLoadedMetadata = () => {\n    const videoDuration = videoRef.current.duration;\n    setDuration(videoDuration);\n  };\n\n  const handleVideoError = (e) => {\n    console.error(\"VideoPreview: Video loading error:\", e);\n    console.error(\"VideoPreview: Failed video source:\", videoSrc);\n  };\n\n  const toggleControls = () => {\n    setControlsVisible(!controlsVisible);\n  };\n\n  return (\n    <div id={id} style={{ ...style }}>\n      {videoSrc && videoSrc.trim() ? (\n        <div>\n          {/* Video container */}\n          <div style={{ position: 'relative', marginBottom: \"8px\" }}>\n            <video\n              ref={videoRef}\n              src={videoSrc}\n              onLoadedMetadata={handleLoadedMetadata}\n              onError={handleVideoError}\n              width=\"100%\"\n              controls={controlsVisible}\n              style={{\n                borderRadius: \"8px\",\n                backgroundColor: \"#000000\",\n                opacity: isVideoActive ? 1 : 0.5, // Dim video when not temporally active\n              }}\n            />\n            {/* Controls toggle button in top right */}\n            <button\n              onClick={toggleControls}\n              style={{\n                position: \"absolute\",\n                top: \"8px\",\n                right: \"8px\",\n                backgroundColor: \"rgba(0, 0, 0, 0.7)\",\n                color: \"white\",\n                border: \"none\",\n                borderRadius: \"4px\",\n                padding: \"4px 8px\",\n                fontSize: \"12px\",\n                cursor: \"pointer\",\n                zIndex: 10,\n                transition: \"background-color 0.2s\",\n              }}\n              onMouseEnter={(e) => e.target.style.backgroundColor = \"rgba(0, 0, 0, 0.9)\"}\n              onMouseLeave={(e) => e.target.style.backgroundColor = \"rgba(0, 0, 0, 0.7)\"}\n            >\n              {controlsVisible ? \"Hide Controls\" : \"Show Controls\"}\n            </button>\n            {!isVideoActive && videoMetadata && (\n              <div\n                style={{\n                  position: \"absolute\",\n                  top: \"50%\",\n                  left: \"50%\",\n                  transform: \"translate(-50%, -50%)\",\n                  backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n                  color: \"white\",\n                  padding: \"12px 20px\",\n                  borderRadius: \"8px\",\n                  textAlign: \"center\",\n                  fontSize: \"14px\",\n                  maxWidth: \"90%\",\n                  boxSizing: \"border-box\",\n                }}\n              >\n                <div style={{ fontWeight: \"bold\", marginBottom: \"4px\" }}>\n                  Video not active\n                </div>\n                <div style={{ fontSize: \"12px\", opacity: 0.9 }}>\n                  Timeline is outside video time range\n                </div>\n              </div>\n            )}\n          </div>\n\n          {/* Timeline offset controls - positioned below video */}\n          {videoMetadata && (\n            <div style={{ marginTop: \"8px\" }}>\n              {/* Toggle button for offset panel */}\n              <button\n                onClick={() => setOffsetPanelOpen(!offsetPanelOpen)}\n                style={{\n                  backgroundColor: \"rgba(0, 0, 0, 0.7)\",\n                  color: \"white\",\n                  border: \"none\",\n                  borderRadius: \"4px\",\n                  padding: \"6px 12px\",\n                  fontSize: \"12px\",\n                  cursor: \"pointer\",\n                  marginBottom: offsetPanelOpen ? \"8px\" : \"0px\",\n                  transition: \"all 0.2s\",\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  gap: \"6px\"\n                }}\n                onMouseEnter={(e) => e.target.style.backgroundColor = \"rgba(0, 0, 0, 0.9)\"}\n                onMouseLeave={(e) => e.target.style.backgroundColor = \"rgba(0, 0, 0, 0.7)\"}\n              >\n                🕒 {formatOffset(localOffset)} {offsetPanelOpen ? \"▲\" : \"▼\"}\n              </button>\n              \n              {/* Collapsible offset controls panel */}\n              {offsetPanelOpen && (\n                <div style={{\n                  backgroundColor: \"rgba(0, 0, 0, 0.9)\",\n                  color: \"white\",\n                  padding: \"16px\",\n                  borderRadius: \"8px\",\n                  fontSize: \"12px\",\n                  border: \"1px solid rgba(255, 255, 255, 0.1)\"\n                }}>\n                  <div style={{ marginBottom: \"12px\", fontWeight: \"bold\", fontSize: \"14px\" }}>\n                    Timeline Offset Adjustment\n                  </div>\n                  \n                  {/* Slider control */}\n                  <div style={{ marginBottom: \"16px\" }}>\n                    <label style={{ display: \"block\", marginBottom: \"6px\", fontWeight: \"500\" }}>\n                      Coarse: {formatOffset(localOffset)}\n                    </label>\n                    <input\n                      type=\"range\"\n                      min=\"-3600\"\n                      max=\"3600\"\n                      step=\"60\"\n                      value={localOffset}\n                      onChange={(e) => updateOffset(parseFloat(e.target.value))}\n                      style={{\n                        width: \"100%\",\n                        height: \"6px\",\n                        background: \"rgba(255, 255, 255, 0.2)\",\n                        borderRadius: \"3px\",\n                        outline: \"none\"\n                      }}\n                    />\n                    <div style={{ \n                      display: \"flex\", \n                      justifyContent: \"space-between\", \n                      fontSize: \"10px\",\n                      marginTop: \"4px\",\n                      opacity: 0.7\n                    }}>\n                      <span>-1hr</span>\n                      <span>0</span>\n                      <span>+1hr</span>\n                    </div>\n                  </div>\n                  \n                  {/* Fine adjustment toggle/input */}\n                  <div style={{ marginBottom: \"16px\" }}>\n                    {!fineControlsOpen ? (\n                      // Show toggle button when fine controls are closed\n                      <button\n                        onClick={() => setFineControlsOpen(true)}\n                        style={{\n                          backgroundColor: \"transparent\",\n                          color: \"rgba(255, 255, 255, 0.8)\",\n                          border: \"1px solid rgba(255, 255, 255, 0.3)\",\n                          borderRadius: \"4px\",\n                          padding: \"6px 12px\",\n                          fontSize: \"11px\",\n                          cursor: \"pointer\",\n                          fontWeight: \"500\",\n                          transition: \"all 0.2s\"\n                        }}\n                        onMouseEnter={(e) => {\n                          e.target.style.backgroundColor = \"rgba(255, 255, 255, 0.1)\";\n                          e.target.style.color = \"white\";\n                        }}\n                        onMouseLeave={(e) => {\n                          e.target.style.backgroundColor = \"transparent\";\n                          e.target.style.color = \"rgba(255, 255, 255, 0.8)\";\n                        }}\n                      >\n                        + Fine adjustment (seconds)\n                      </button>\n                    ) : (\n                      // Show fine controls when open\n                      <div>\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", marginBottom: \"6px\" }}>\n                          <label style={{ fontWeight: \"500\" }}>\n                            Fine (seconds):\n                          </label>\n                          <button\n                            onClick={() => setFineControlsOpen(false)}\n                            style={{\n                              backgroundColor: \"transparent\",\n                              color: \"rgba(255, 255, 255, 0.6)\",\n                              border: \"none\",\n                              fontSize: \"10px\",\n                              cursor: \"pointer\",\n                              padding: \"2px 4px\"\n                            }}\n                            onMouseEnter={(e) => e.target.style.color = \"white\"}\n                            onMouseLeave={(e) => e.target.style.color = \"rgba(255, 255, 255, 0.6)\"}\n                          >\n                            ✕ close\n                          </button>\n                        </div>\n                        <div style={{ display: \"flex\", gap: \"8px\", alignItems: \"center\" }}>\n                          <input\n                            type=\"number\"\n                            step=\"0.1\"\n                            value={localOffset}\n                            onChange={(e) => updateOffset(parseFloat(e.target.value) || 0)}\n                            style={{\n                              flex: 1,\n                              padding: \"8px\",\n                              backgroundColor: \"rgba(255, 255, 255, 0.1)\",\n                              border: \"1px solid rgba(255, 255, 255, 0.3)\",\n                              borderRadius: \"4px\",\n                              color: \"white\",\n                              fontSize: \"12px\"\n                            }}\n                          />\n                          <button\n                            onClick={() => updateOffset(0)}\n                            style={{\n                              padding: \"8px 12px\",\n                              backgroundColor: \"rgba(255, 255, 255, 0.2)\",\n                              border: \"1px solid rgba(255, 255, 255, 0.3)\",\n                              borderRadius: \"4px\",\n                              color: \"white\",\n                              fontSize: \"11px\",\n                              cursor: \"pointer\",\n                              fontWeight: \"500\"\n                            }}\n                          >\n                            Reset\n                          </button>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                  \n                  {/* Visual feedback */}\n                  <div style={{ \n                    fontSize: \"11px\", \n                    opacity: 0.8,\n                    borderTop: \"1px solid rgba(255, 255, 255, 0.2)\",\n                    paddingTop: \"12px\"\n                  }}>\n                    <div style={{ marginBottom: \"2px\" }}>\n                      <strong>Original:</strong> {formatUTCTime(videoMetadata.fileCreatedAt)} UTC\n                    </div>\n                    <div>\n                      <strong>Adjusted:</strong> {formatUTCTime(new Date(new Date(videoMetadata.fileCreatedAt).getTime() + localOffset * 1000).toISOString())} UTC\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      ) : (\n        <div\n          style={{\n            padding: \"40px\",\n            textAlign: \"center\",\n            backgroundColor: \"#f8fafc\",\n            border: \"2px dashed #cbd5e1\",\n            borderRadius: \"12px\",\n            margin: \"20px\",\n          }}\n        >\n          <h3 style={{ margin: \"0 0 8px 0\", color: \"#475569\" }}>\n            No video selected\n          </h3>\n          <p style={{ margin: 0, fontSize: \"14px\", color: \"#475569\" }}>\n            Click a video indicator on the timeline to play\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nVideoPreview.propTypes = {\n  id: PropTypes.string,\n  videoSrc: PropTypes.string,\n  videoMetadata: PropTypes.object,\n  datasetStartTime: PropTypes.number,\n  setProps: PropTypes.func,\n  style: PropTypes.object,\n  playheadTime: PropTypes.number,\n  isPlaying: PropTypes.bool,\n  showControls: PropTypes.bool,\n  timeOffset: PropTypes.number,\n};\n\nVideoPreview.defaultProps = {\n  style: {},\n  isPlaying: false,\n  showControls: true,\n  timeOffset: 0,\n};\n\nexport default VideoPreview;\n"],"names":["url","__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","getCurrentScript","script","document","currentScript","doc_scripts","getElementsByTagName","scripts","i","length","push","filter","s","async","text","textContent","slice","src","split","join","jsonpScriptSrc","__jsonpScriptSrc__","chunkId","isLocal","test","srcFragments","fileFragments","splice","window","VideoPreview","_ref","id","videoSrc","videoMetadata","setProps","datasetStartTime","style","playheadTime","isPlaying","_ref$showControls","showControls","_ref$timeOffset","timeOffset","videoRef","useRef","_useState2","_slicedToArray","useState","setDuration","_useState4","isVideoActive","setIsVideoActive","_useState6","controlsVisible","setControlsVisible","_useState8","localOffset","setLocalOffset","_useState10","offsetPanelOpen","setOffsetPanelOpen","_useState12","fineControlsOpen","setFineControlsOpen","lastPlayheadTime","lastPlayingState","videoStartTime","useEffect","current","currentTime","formatOffset","offsetSeconds","absOffset","Math","abs","sign","concat","toFixed","minutes","floor","seconds","hours","formatUTCTime","dateString","dateObject","Date","getUTCHours","getUTCMinutes","getUTCSeconds","toString","padStart","e","console","error","updateOffset","newOffset","positionData","fileCreatedAt","replace","getTime","adjustedVideoStartTime","videoDurationSeconds","durationStr","timeParts","parseInt","parseFloat","parseVideoDuration","duration","adjustedVideoEndTime","isActive","videoPosition","max","min","originalVideoStartTime","calculateVideoPosition","playStateChanged","isFirstUpdate","significantTimeJump","timeDiff","log","filename","play","warn","pause","paused","React","_objectSpread","trim","position","marginBottom","ref","onLoadedMetadata","videoDuration","onError","width","controls","borderRadius","backgroundColor","opacity","onClick","top","right","color","border","padding","fontSize","cursor","zIndex","transition","onMouseEnter","target","onMouseLeave","left","transform","textAlign","maxWidth","boxSizing","fontWeight","marginTop","display","alignItems","gap","type","step","onChange","height","background","outline","justifyContent","flex","borderTop","paddingTop","toISOString","margin","propTypes","PropTypes","defaultProps"],"sourceRoot":""}