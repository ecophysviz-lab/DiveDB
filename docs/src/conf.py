# Configuration file for the Sphinx documentation builder.
#
# For the full list of built-in configuration values, see the documentation:
# https://www.sphinx-doc.org/en/master/usage/configuration.html

# -- Path setup --------------------------------------------------------------

import os
import sys
import shutil

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.

sys.path.insert(0, os.path.abspath('../../../DiveDB/'))

# -- Project information -----------------------------------------------------
# https://www.sphinx-doc.org/en/master/usage/configuration.html#project-information

project = 'DiveDB'
copyright = '2025, TODO'
author = 'TODO'
release = '0.1.0'  # TODO: Pull from code version


# -- General configuration ---------------------------------------------------
# https://www.sphinx-doc.org/en/master/usage/configuration.html#general-configuration

extensions = [
    'sphinx.ext.napoleon',  # Support np documentation style docstrings
    'sphinx.ext.autodoc',  # Core library for html generation from docstrings
    'myst_parser',  # Support including markdown files
]

templates_path = ['../_templates']
exclude_patterns = ['_build', '_templates', 'Thumbs.db', '.DS_Store']

myst_heading_anchors = 7
suppress_warnings = ["myst.header"]

# -- Options for HTML output -------------------------------------------------
# https://www.sphinx-doc.org/en/master/usage/configuration.html#options-for-html-output

html_theme = 'sphinx_rtd_theme'
html_static_path = ['_static']


# -- Autogenerated API -------------------------------------------------
# Set up `sphinx-apidoc` to run every time documentation is built
def run_apidoc(_):
    try:
        from sphinx.ext.apidoc import main as apidoc
    except ImportError:
        from sphinx.apidoc import main as apidoc
    sys.path.append(os.path.join(os.path.dirname(__file__), ".."))

    conf_dir = os.path.abspath(os.path.dirname(__file__))
    output_dir = os.path.join(conf_dir, "_auto-apidoc")
    module_to_be_documented = os.path.join(conf_dir, "..", "..", "DiveDB")
    os.environ["SPHINX_APIDOC_OPTIONS"] = "members,undoc-members,show-inheritance"

    # Always remove auto-generated content before regenerating docs.
    # Will this take more time? Slightly. Will it make debugging easier? Almost 
    # certainly!
    if os.path.exists(output_dir):
        shutil.rmtree(output_dir)
    apidoc(["--module-first", "--separate", "--force", "--no-toc", "-d 0",
            "-o", output_dir, module_to_be_documented])


def setup(app):
    app.connect("builder-inited", run_apidoc)
